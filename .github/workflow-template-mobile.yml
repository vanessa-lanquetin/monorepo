  mobile-{{NAME_ROUTE_SANITIZED}}:
    needs: [publish]
    if: contains(needs.publish.outputs.changed, '{{NAME_ROUTE}}')
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Receive event
        run: echo -e "ref:${{ github.ref }}\nversion:${{ inputs.package_version }}\n"

      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: package-json
        name: Read package.json
        run: |
          echo packageJSON=$(cat {{LOCATION}}/package.json) >> $GITHUB_OUTPUT


      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com/'
          cache: 'yarn'

      - name: insert credentials
        run: | 
          echo -e "\n//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" >> .npmrc
          echo -e "\n@clabroche:registry=https://npm.pkg.github.com" >> .npmrc

      - name: Ensure access
        run: npm whoami --registry https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: yarn workspaces focus @vanessa-lanquetin/{{NAME_ROUTE}} @vanessa-lanquetin/monorepo

      - name: Build
        run: npm run build -- --filter=@vanessa-lanquetin/{{NAME_ROUTE}}

      - name: Sync capacitor
<<<<<<< HEAD
        working-directory: {{LOCATION}}
        run: yarn cap sync

      - name: Extract Android signing key from env
        working-directory: {{LOCATION}}
        run: |
          echo "${{ secrets.KEY_STORE_FILE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > android/release.decrypted.jks

      - name: Temp fix stripe
        run: |
          ([ -f node_modules/@capacitor-community/stripe-terminal/android/src/main/java/com/getcapacitor/community/stripe/terminal/StripeTerminalPlugin.java ] && cp ./sophiemairy.fr/front/fix-stripe/StripeTerminalPlugin.java node_modules/@capacitor-community/stripe-terminal/android/src/main/java/com/getcapacitor/community/stripe/terminal/StripeTerminalPlugin.java) || echo "no action"
      - name: Build APK
        working-directory: {{LOCATION}}
        run: |
          cd android
          sh ./gradlew assembleRelease
      - name: Setup build tool version variable
        shell: bash
        run: |
          BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
          echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
          echo Last build tool version is: $BUILD_TOOL_VERSION
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app
=======
        run: cd {{LOCATION}} &&  node_modules/.bin/cap sync

      - name: Build apk
        run: cd {{LOCATION}}/android && ./gradlew assembleRelease

      - name: Android apksigner
        uses: r0adkll/sign-android-release@v1
>>>>>>> develop
        with:
          releaseDirectory: {{LOCATION}}/android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEY_STORE_FILE }}
          alias: ${{ secrets.KEY_STORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

      - name: 'Upload APK stable ${{fromJson(steps.package-json.outputs.packageJson).version}}'
        if: contains(github.ref_name, 'master')
        run: |
          curl -X POST -H "authorization: ${{ secrets.JWT_PRIVATE_KEY }}" -F file=@${{steps.sign_app.outputs.signedReleaseFile}} -F version=${{fromJson(steps.package-json.outputs.packageJson).version}} https://appstore-core.corentinlabroche.fr/api/apps/{{APPID}}/upload --fail


      - name: 'Upload APK prerelease ${{fromJson(steps.package-json.outputs.packageJson).version}}'
        if: contains(github.ref_name, 'develop') || contains(github.ref_name, 'staging')
        run: |
          curl -X POST -H "authorization: ${{ secrets.JWT_PRIVATE_KEY }}" -F file=@${{steps.sign_app.outputs.signedReleaseFile}} -F version=${{fromJson(steps.package-json.outputs.packageJson).version}}-${{github.ref_name}} https://appstore-core.corentinlabroche.fr/api/apps/{{APPID}}/upload --fail

